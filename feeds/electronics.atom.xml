<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SkyLyrac - electronics</title><link href="http://www.skylyrac.net/" rel="alternate"></link><link href="http://www.skylyrac.net/feeds/electronics.atom.xml" rel="self"></link><id>http://www.skylyrac.net/</id><updated>2018-02-01T23:25:00+00:00</updated><entry><title>Tetris made with a PIC18F2550</title><link href="http://www.skylyrac.net/2015-09-20-tetris-made-with-a-pic18f2550.html" rel="alternate"></link><published>2015-09-20T23:06:00+01:00</published><updated>2015-09-20T23:06:00+01:00</updated><author><name>Antonio Niño Díaz</name></author><id>tag:www.skylyrac.net,2015-09-20:/2015-09-20-tetris-made-with-a-pic18f2550.html</id><summary type="html">&lt;p&gt;Hello again!&lt;/p&gt;
&lt;p&gt;This time I'm writing to show you my newest electronic creation: a &amp;quot;videogame
console&amp;quot; made with a &lt;strong&gt;PIC18F2550&lt;/strong&gt; as its brain. It has a 8x16 LED matrix as
main display and 4 seven segment displays to show the player score, for example.
It has 8 buttons (4 in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello again!&lt;/p&gt;
&lt;p&gt;This time I'm writing to show you my newest electronic creation: a &amp;quot;videogame
console&amp;quot; made with a &lt;strong&gt;PIC18F2550&lt;/strong&gt; as its brain. It has a 8x16 LED matrix as
main display and 4 seven segment displays to show the player score, for example.
It has 8 buttons (4 in a pad, the rest like a Game Boy or similar). The PIC
doesn't have enough pins to control everything easily, so I've used a few
74HC595 to control the LED matrix and the seven segment displays, and a 74HC166
to read the state of all buttons.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Photo of the front of the board" src="./images/tetris-pic-front.jpg" style="width: 49%;" /&gt; &lt;img alt="Photo of the back of the board" src="./images/tetris-pic-back.jpg" style="width: 49%;" /&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The game I've decided to code for the demonstration is a simple Tetris, written
in 100% assembly. YouTube &lt;strong&gt;video&lt;/strong&gt; here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=5fmSbreJsDI"&gt;https://www.youtube.com/watch?v=5fmSbreJsDI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Buttons&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Move left/right.&lt;/li&gt;
&lt;li&gt;Rotate clockwise/counterclockwise.&lt;/li&gt;
&lt;li&gt;Go down quickly, go down instantly.&lt;/li&gt;
&lt;li&gt;Pause, reset.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the moment I haven't decided if I should post the schematics and the source
code for various reasons:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I used different systems to power the LED matrix and the seven segment
displays. A decent design should use the same system.&lt;/li&gt;
&lt;li&gt;Some resistors are too high and the LEDs, when lit, are too dim. I didn't
consider the scanline refresh when calculating the resistors, so the actual
intensity is a lot lower than I thought.&lt;/li&gt;
&lt;li&gt;The source code of the game is a bit messy (the &amp;quot;drivers&amp;quot; code is good,
though).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, I hope you like it!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Well, whatever, I'll just put the schematics and the code... :P&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Schematics&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="Schematics in color" class="align-center" src="./images/tetris-pic-sch.png" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Schematics in black and white" class="align-center" src="./images/tetris-pic-sch-bw.png" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Don't expect it to be clean and/or human readable. The file 'main.asm' contains
the 'drivers', and 'tetris.asm' contains the game. It's fairly easy to modify it
to change some of the pin assignments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Download (gEDA schematics + assembly code + assembled .hex file)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;New version (2015/10/06), with a small modification to prevent &amp;quot;ghosting&amp;quot;
between displays when performing the scanline change. Also fixed a bug that
didn't remove completed lines before checking if game over.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="./downloads/tetris_pic_20151006.tar.gz"&gt;Download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Possible improvements&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Change pull-down resistors for the buttons (R29-R36) by 10K resistors.&lt;/li&gt;
&lt;li&gt;Change LED resistors (330 Ohm) by 300 or maybe 220 resistors (R1-R16 and
R37-R44).&lt;/li&gt;
&lt;li&gt;Make the LED matrix and the seven segment displays work the same way (changing
the displays by common-anode equivalents and the transistors used to drive
them).&lt;/li&gt;
&lt;/ul&gt;
</content><category term="electronics"></category><category term="programming"></category></entry><entry><title>Electronic dice</title><link href="http://www.skylyrac.net/2015-07-12-electronic-dice.html" rel="alternate"></link><published>2015-07-12T20:15:00+01:00</published><updated>2018-02-01T23:25:00+00:00</updated><author><name>Antonio Niño Díaz</name></author><id>tag:www.skylyrac.net,2015-07-12:/2015-07-12-electronic-dice.html</id><summary type="html">&lt;p&gt;Well, after a few weeks not doing almost anything I've decided to post the last
useless device I've made. It's a simple electronic dice using a decade counter
and some inverters (used for logic and as oscillator). I decided not to use a
microcontroller because it felt like it was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, after a few weeks not doing almost anything I've decided to post the last
useless device I've made. It's a simple electronic dice using a decade counter
and some inverters (used for logic and as oscillator). I decided not to use a
microcontroller because it felt like it was cheating for a circuit this
simple... There's not much to say: pressing the button will enable the counter
and releasing the button will stop it and show a &amp;quot;random&amp;quot; number. The counter is
very fast so it's impossible to guess what number is going to show when the
button is released. Here are a few pictures:&lt;/p&gt;
&lt;img alt="Photo 1 of the dice" class="align-center" src="./images/electronic-dice-1.jpg" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Photo 2 of the dice" class="align-center" src="./images/electronic-dice-2.jpg" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I used foam to hold the board and the battery in place so that it could be put
into a handmade box.&lt;/p&gt;
&lt;img alt="Photo 3 of the dice" class="align-center" src="./images/electronic-dice-3.jpg" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Photo 4 of the dice" class="align-center" src="./images/electronic-dice-4.jpg" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And, at last, a video of the circuit working:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=t7blrTmsfKg"&gt;https://www.youtube.com/watch?v=t7blrTmsfKg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While it's a really simple circuit to design and make, I've decided to create
schematics in case someone wants to make this:&lt;/p&gt;
&lt;img alt="Schematics of the dice" class="align-center" src="./images/electronic-dice-schematics.png" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Almost all components are specified in the schematic. The ones that aren't
completely specified are the voltage regulator (78L05), the inverter IC (74LS04)
and the decade counter (HFC4017).&lt;/p&gt;
&lt;p&gt;There are two interesting things about this circuit, and the reason of both of
them is that I didn't want to buy many components, so I decided to use whatever
I had at home:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The first one is that the oscillator is made of two inverters (and a capacitor
and resistor). The values I've used for R and C make it oscillate at 390Hz
approximately.&lt;/li&gt;
&lt;li&gt;The second one is that I don't use an IC with OR gates. I've decided to use
some diodes and resistors to create them
(&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Diode_logic"&gt;https://en.wikipedia.org/wiki/Diode_logic&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The circuit uses a 9 V battery. The logic of the circuit needs about 11 mA, and
the LEDs need around 9 mA each. That means it uses from 20 mA (when only 1 LED
is on) to 65 mA (when 6 LEDs are on). The 7 LEDs can't be turned on at the same
time, obviously.&lt;/p&gt;
</content><category term="electronics"></category></entry></feed>