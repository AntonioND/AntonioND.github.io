<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SkyLyrac - hacking</title><link href="http://www.skylyrac.net/" rel="alternate"></link><link href="http://www.skylyrac.net/feeds/hacking.atom.xml" rel="self"></link><id>http://www.skylyrac.net/</id><updated>2018-02-01T23:17:00+00:00</updated><entry><title>Game Boy Camera documentation</title><link href="http://www.skylyrac.net/2015-03-12-game-boy-camera-documentation.html" rel="alternate"></link><published>2015-03-12T13:20:00+00:00</published><updated>2018-02-01T23:17:00+00:00</updated><author><name>Antonio Niño Díaz</name></author><id>tag:www.skylyrac.net,2015-03-12:/2015-03-12-game-boy-camera-documentation.html</id><summary type="html">&lt;p&gt;Over the last few weeks I've been doing some reverse engineering on the GB
Camera and I think I've documented it good enough for most things. I've reversed
the cartridge controller registers and measured the capture timings. The only
thing that I can't understand is the level/gain control of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the last few weeks I've been doing some reverse engineering on the GB
Camera and I think I've documented it good enough for most things. I've reversed
the cartridge controller registers and measured the capture timings. The only
thing that I can't understand is the level/gain control of the sensor (its
datasheet is really bad) but it shouldn't matter for an emulator. I've
implemented this in &lt;a class="reference external" href="https://github.com/AntonioND/giibiiadvance"&gt;GiiBiiAdvance&lt;/a&gt; and it's working perfectly
(you'll have to wait for the next version if you want to check it, though), so I
guess that's all that matters.&lt;/p&gt;
&lt;p&gt;And a pic of my hardware setup (click to zoom):&lt;/p&gt;
&lt;img alt="Photo of my hardware setup" class="align-center" src="./images/gbcam-arduino.jpg" style="width: 100%;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The repository is here: &lt;a class="reference external" href="https://github.com/AntonioND/gbcam-rev-engineer"&gt;https://github.com/AntonioND/gbcam-rev-engineer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first release is here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/AntonioND/gbcam-rev-engineer/releases/tag/v1.0"&gt;https://github.com/AntonioND/gbcam-rev-engineer/releases/tag/v1.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS: Did I mention before that I won the GBdev 2014 compo? :&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://gbdev.gg8.se/forums/viewtopic.php?id=244"&gt;http://gbdev.gg8.se/forums/viewtopic.php?id=244&lt;/a&gt;&lt;/p&gt;
</content><category term="gameboy"></category><category term="programming"></category><category term="giibiiadvance"></category><category term="hacking"></category><category term="electronics"></category></entry><entry><title>Faceball 2000 Double Speed Mod v0.1</title><link href="http://www.skylyrac.net/2014-06-04-faceball-2000-double-speed-mod-v0-1.html" rel="alternate"></link><published>2014-06-04T16:29:00+01:00</published><updated>2014-06-04T16:29:00+01:00</updated><author><name>Antonio Niño Díaz</name></author><id>tag:www.skylyrac.net,2014-06-04:/2014-06-04-faceball-2000-double-speed-mod-v0-1.html</id><summary type="html">&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;A few days ago I discovered this game, I tried it, and got disappointed because
it has a painfully low framerate (&lt;a class="reference external" href="https://www.youtube.com/watch?v=KQAhnNiOu54"&gt;video&lt;/a&gt;)... So I opened it with BGB and
decided to fix it! :)&lt;/p&gt;
&lt;p&gt;I've changed the initial jump to an empty area just before the ROM header. I
just …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;A few days ago I discovered this game, I tried it, and got disappointed because
it has a painfully low framerate (&lt;a class="reference external" href="https://www.youtube.com/watch?v=KQAhnNiOu54"&gt;video&lt;/a&gt;)... So I opened it with BGB and
decided to fix it! :)&lt;/p&gt;
&lt;p&gt;I've changed the initial jump to an empty area just before the ROM header. I
just switch to CPU double speed mode, wait for VBL, load greyscale palettes for
BGs and sprites and jump to real start point. Of course, it only works in GBC
and GBA now! Header's GBC flag has been changed, and checksums have been fixed.&lt;/p&gt;
&lt;p&gt;Just to make it clear: This makes the CPU faster, so everything changes. Music
is still the same because it uses interrupts for synchronization, framerate is
multiplied by at least 2, but timer countdown is affected! Also, link
communications are affected.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You'll need an IPS patcher like &lt;a class="reference external" href="http://www.romhacking.net/utilities/240/"&gt;Lunar IPS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And, of course, the &amp;quot;Faceball 2000 (USA).gb&amp;quot; ROM, which I won't provide here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The patch you have to apply is here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="./downloads/faceball_2000_gbc_mod_v01.ips"&gt;Download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I haven't tested Link functions, but it should work between modified copies of
the game. I haven't changed the way the game works. It still copies VRAM data
manually instead of using GDMA or something like that, but that would need some
extra work, and it runs fine now. I hope you like it!&lt;/p&gt;
&lt;p&gt;Bye!&lt;/p&gt;
</content><category term="gameboy"></category><category term="hacking"></category></entry><entry><title>Switch GBA into GBC mode by software</title><link href="http://www.skylyrac.net/2014-04-20-switch-gba-into-gbc-mode-by-software.html" rel="alternate"></link><published>2014-04-20T20:46:00+01:00</published><updated>2018-02-01T23:12:00+00:00</updated><author><name>Antonio Niño Díaz</name></author><id>tag:www.skylyrac.net,2014-04-20:/2014-04-20-switch-gba-into-gbc-mode-by-software.html</id><summary type="html">&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;I know dwedit did something like this a few years ago, but I never managed to
compile its code and make it run (even though the precompiled binary worked
fine). Anyway, the code was just an incomprehensible mess:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.dwedit.org/dwedit_board/viewtopic.php?id=339"&gt;http://www.dwedit.org/dwedit_board/viewtopic.php?id=339&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This morning …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;I know dwedit did something like this a few years ago, but I never managed to
compile its code and make it run (even though the precompiled binary worked
fine). Anyway, the code was just an incomprehensible mess:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.dwedit.org/dwedit_board/viewtopic.php?id=339"&gt;http://www.dwedit.org/dwedit_board/viewtopic.php?id=339&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This morning I've read that the GBA bios still had the piece of code that
switches the GBA into GBC mode, like Nintendo planned to do in the beginning
(before deciding that it would be better to do it with a hardware switch).&lt;/p&gt;
&lt;p&gt;I've disassembled the part that performs this switch and made a little demo to
show that it works! Here it is:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/AntonioND/gba-switch-to-gbc"&gt;https://github.com/AntonioND/gba-switch-to-gbc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But it doesn't end here! It can also apply an affine transformation to the GBC
video output, and even enable mosaic effect or &lt;tt class="docutils literal"&gt;GREENSWP&lt;/tt&gt; register! The
&lt;tt class="docutils literal"&gt;GREENSWP&lt;/tt&gt; register works a bit different than in GBA mode, by the way.&lt;/p&gt;
&lt;p&gt;The bad thing is that the video output only works in GB Micro, in GBA and GBA SP
it shows a black screen, and in DS it doesn't work at all (it doesn't have a GB
CPU).&lt;/p&gt;
&lt;p&gt;I've also uploaded a video:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=-SkR8SAdS9w"&gt;https://www.youtube.com/watch?v=-SkR8SAdS9w&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bye!&lt;/p&gt;
</content><category term="gameboy"></category><category term="gameboy-advance"></category><category term="c"></category><category term="hacking"></category></entry></feed>